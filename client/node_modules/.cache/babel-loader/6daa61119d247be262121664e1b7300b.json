{"ast":null,"code":"import React from 'react';\nimport './board.styles.scss';\nimport Cell from '../cell/cell.component';\n\nconst Board = ({\n  width,\n  height,\n  start,\n  goal,\n  paths\n}) => {\n  // const boardArray = new Array(width*height);\n  // for(var i = 0; i < boardArray.length; i++) boardArray[i] = 1;\n  // const boardJSX = boardArray.map((val, index) => {\n  //     // ((index+1) % width) == 0 ? \n  //     // <span><Cell /><br /></span>\n  //     // :\n  //     // <Cell />;\n  //     // console.log(index)\n  //     if((index+1) % width === 0) {\n  //         // console.log('??');\n  //         return(<span><Cell key={index} /><br /></span>);\n  //     }\n  //     else return(<Cell key={index}/>);\n  // });\n  // return (\n  //     <div className='Board'>\n  //         {boardJSX}\n  //     </div>\n  // );\n  const boardArray = new Array(width);\n\n  for (var i = 0; i < boardArray.length; i++) {\n    boardArray[i] = new Array(height);\n\n    for (var j = 0; j < boardArray.length; j++) {\n      boardArray[i][j] = {\n        isStart: false,\n        isGoal: false,\n        inPath: false,\n        value: 1\n      };\n    }\n  }\n\n  console.log(boardArray);\n  boardArray[start.i][start.j].isStart = true;\n  boardArray[goal.i][goal.j].isGoal = true;\n  paths.forEach(item => {\n    console.log(item);\n  });\n};\n\nexport default Board;","map":{"version":3,"sources":["/Users/markyu/Desktop/work/fetch-robotics/path_planner/client/src/components/board/board.component.js"],"names":["React","Cell","Board","width","height","start","goal","paths","boardArray","Array","i","length","j","isStart","isGoal","inPath","value","console","log","forEach","item"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,qBAAP;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,MAAR;AAAgBC,EAAAA,KAAhB;AAAuBC,EAAAA,IAAvB;AAA6BC,EAAAA;AAA7B,CAAD,KAAyC;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAMC,UAAU,GAAG,IAAIC,KAAJ,CAAUN,KAAV,CAAnB;;AACA,OAAI,IAAIO,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,UAAU,CAACG,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACvCF,IAAAA,UAAU,CAACE,CAAD,CAAV,GAAgB,IAAID,KAAJ,CAAUL,MAAV,CAAhB;;AACA,SAAI,IAAIQ,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGJ,UAAU,CAACG,MAA9B,EAAsCC,CAAC,EAAvC,EAA2C;AACvCJ,MAAAA,UAAU,CAACE,CAAD,CAAV,CAAcE,CAAd,IAAmB;AACfC,QAAAA,OAAO,EAAE,KADM;AAEfC,QAAAA,MAAM,EAAE,KAFO;AAGfC,QAAAA,MAAM,EAAE,KAHO;AAIfC,QAAAA,KAAK,EAAE;AAJQ,OAAnB;AAMH;AACJ;;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAYV,UAAZ;AACAA,EAAAA,UAAU,CAACH,KAAK,CAACK,CAAP,CAAV,CAAoBL,KAAK,CAACO,CAA1B,EAA6BC,OAA7B,GAAuC,IAAvC;AACAL,EAAAA,UAAU,CAACF,IAAI,CAACI,CAAN,CAAV,CAAmBJ,IAAI,CAACM,CAAxB,EAA2BE,MAA3B,GAAoC,IAApC;AACAP,EAAAA,KAAK,CAACY,OAAN,CAAeC,IAAD,IAAU;AACpBH,IAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;AACH,GAFD;AAGH,CAtCD;;AAwCA,eAAelB,KAAf","sourcesContent":["import React from 'react';\nimport './board.styles.scss';\n\nimport Cell from '../cell/cell.component'\n\nconst Board = ({width, height, start, goal, paths}) => {\n    // const boardArray = new Array(width*height);\n    // for(var i = 0; i < boardArray.length; i++) boardArray[i] = 1;\n    // const boardJSX = boardArray.map((val, index) => {\n    //     // ((index+1) % width) == 0 ? \n    //     // <span><Cell /><br /></span>\n    //     // :\n    //     // <Cell />;\n    //     // console.log(index)\n    //     if((index+1) % width === 0) {\n    //         // console.log('??');\n    //         return(<span><Cell key={index} /><br /></span>);\n    //     }\n    //     else return(<Cell key={index}/>);\n    // });\n    // return (\n    //     <div className='Board'>\n    //         {boardJSX}\n    //     </div>\n    // );\n    const boardArray = new Array(width);\n    for(var i = 0; i < boardArray.length; i++) {\n        boardArray[i] = new Array(height);\n        for(var j = 0; j < boardArray.length; j++) {\n            boardArray[i][j] = {\n                isStart: false,\n                isGoal: false,\n                inPath: false,\n                value: 1,\n            }\n        }\n    }\n    console.log(boardArray);\n    boardArray[start.i][start.j].isStart = true;\n    boardArray[goal.i][goal.j].isGoal = true;\n    paths.forEach((item) => {\n        console.log(item);\n    });\n};\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}
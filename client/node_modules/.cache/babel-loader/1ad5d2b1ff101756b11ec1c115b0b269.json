{"ast":null,"code":"var _jsxFileName = \"/Users/markyu/Desktop/work/fetch-robotics/path_planner/client/src/components/puzzle/puzzle.component.js\";\n// TODOS: 1. List of obstacles\nimport React from 'react';\nimport './puzzle.styles.scss';\nimport Board from '../board/board.component';\nimport Popup from '../popup/popup.component';\nimport Adapter from '../../api/ApiAdapter';\n\nclass Puzzle extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async () => {\n      const resCreateMap = await Adapter.createMap(this.state.inputHeight, this.state.inputWidth); // const resCreateStart = await Adapter.createStart(this.state.startI, this.state.startJ);\n      // const resCreateGoal = await Adapter.createGoal(this.state.goalI, this.state.goalJ);\n      // const resGetPath = await Adapter.getPath();\n\n      this.setState({\n        settings: false,\n        mapWidth: resCreateMap.mapWidth,\n        mapHeight: resCreateMap.mapHeight,\n        startI: resCreateStart.i,\n        startJ: resCreateStart.j,\n        goalI: resCreateGoal.i,\n        goalJ: resCreateGoal.j,\n        paths: resGetPath.paths\n      });\n    };\n\n    this.changeMap = async () => {\n      const resCreateMap = await Adapter.createMap(this.state.inputHeight, this.state.inputWidth); // const resCreateStart = await Adapter.createStart(0, 0);\n      // const resCreateGoal = await Adapter.createGoal(this.state.inputHeight-1, this.state.inputWidth-1);\n      // const resCreateCost = await Adapter.createCost();\n      // const resGetPath = await Adapter.getPath();\n      // console.log(resCreateStart);\n      // console.log(resCreateGoal);\n\n      console.log(resCreateMap);\n      this.setState({\n        mapWidth: resCreateMap.mapWidth,\n        mapHeight: resCreateMap.mapHeight,\n        startI: resCreateMap.start.i,\n        startJ: resCreateMap.start.j,\n        goalI: resCreateMap.goal.i,\n        goalJ: resCreateMap.goal.j,\n        costs: [],\n        paths: resCreateMap.paths\n      });\n    };\n\n    this.changeStart = async () => {\n      await Adapter.createMap(this.state.inputHeight, this.state.inputWidth);\n      const resCreateStart = await Adapter.createStart(this.state.inputStartI, this.state.inputStartJ);\n      await Adapter.createGoal(this.state.goalI, this.state.goalJ);\n      await Adapter.createCost(this.state.costs);\n      const resGetPath = await Adapter.getPath(); // console.log(resCreateStart);\n\n      this.setState({\n        startI: resCreateStart.i,\n        startJ: resCreateStart.j,\n        paths: resGetPath.paths\n      });\n    };\n\n    this.changeGoal = async () => {\n      await Adapter.createMap(this.state.inputHeight, this.state.inputWidth);\n      await Adapter.createStart(this.state.startI, this.state.startJ);\n      const resCreateGoal = await Adapter.createGoal(this.state.inputGoalI, this.state.inputGoalJ);\n      await Adapter.createCost(this.state.costs);\n      const resGetPath = await Adapter.getPath(); // console.log(resGetPath);\n      // console.log(resCreateStart);\n\n      this.setState({\n        goalI: resCreateGoal.i,\n        goalJ: resCreateGoal.j,\n        paths: resGetPath.paths\n      });\n    };\n\n    this.changeCosts = async () => {\n      // console.log(this.state.costs.split(','));\n      const JSONArray = this.state.inputCosts.split('|');\n      const costObjects = JSONArray.map(item => {\n        // console.log(item);\n        return JSON.parse(item);\n      });\n      await Adapter.createMap(this.state.inputHeight, this.state.inputWidth);\n      await Adapter.createStart(this.state.inputStartI, this.state.inputStartJ);\n      await Adapter.createGoal(this.state.goalI, this.state.goalJ);\n      const resCreateCost = await Adapter.createCost(costObjects);\n      const resGetPath = await Adapter.getPath();\n      console.log(resCreateCost);\n      this.setState({\n        costs: resCreateCost,\n        paths: resGetPath.paths\n      });\n    };\n\n    this.handleChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.updateMovement = (newI, newJ) => {\n      this.setState({\n        inputStartI: newI,\n        inputStartJ: newJ\n      });\n    };\n\n    this.state = {\n      settings: true,\n      mapWidth: 0,\n      mapHeight: 0,\n      inputWidth: 0,\n      inputHeight: 0,\n      startI: 0,\n      startJ: 0,\n      inputStartI: 0,\n      inputStartJ: 0,\n      goalI: 0,\n      goalJ: 0,\n      inputGoalI: 0,\n      inputGoalJ: 0,\n      inputCosts: '',\n      costs: [],\n      paths: []\n    };\n  } // shouldComponentUpdate(nextProps, nextState) {\n  //     // console.log(nextState);\n  //     return true;\n  // }\n\n\n  render() {\n    const start = {\n      i: this.state.startI,\n      j: this.state.startJ\n    };\n    const goal = {\n      i: this.state.goalI,\n      j: this.state.goalJ\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, this.state.settings ? React.createElement(Popup, {\n      handleSubmit: this.handleSubmit,\n      handleChange: this.handleChange // inputHeight={this.state.inputHeight}\n      // inputWidth={this.state.inputWidth}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(Board, {\n      width: this.state.mapWidth,\n      height: this.state.mapHeight,\n      start: start,\n      goal: goal,\n      costs: this.state.costs,\n      paths: this.state.paths,\n      updateMovement: this.updateMovement,\n      changeStart: this.changeStart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"config\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Map:\"), React.createElement(\"form\", {\n      id: \"changeMap\",\n      onSubmit: this.changeMap,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"i:\"), React.createElement(\"input\", {\n      name: \"inputHeight\",\n      type: \"number\",\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"j:\"), React.createElement(\"input\", {\n      name: \"inputWidth\",\n      type: \"number\",\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.changeMap,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"SUBMIT\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"Start:\"), React.createElement(\"form\", {\n      id: \"changeStart\",\n      onSubmit: this.changeStart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"i:\"), React.createElement(\"input\", {\n      name: \"inputStartI\",\n      type: \"number\",\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"j:\"), React.createElement(\"input\", {\n      name: \"inputStartJ\",\n      type: \"number\",\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.changeStart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"SUBMIT\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"Goal:\"), React.createElement(\"form\", {\n      id: \"changeGoal\",\n      onSubmit: this.changeGoal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"i:\"), React.createElement(\"input\", {\n      name: \"inputGoalI\",\n      type: \"number\",\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, \"j:\"), React.createElement(\"input\", {\n      name: \"inputGoalJ\",\n      type: \"number\",\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.changeGoal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"SUBMIT\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"Costs:\"), React.createElement(\"form\", {\n      id: \"changeCosts\",\n      onSubmit: this.changCosts,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"costs\",\n      name: \"inputCosts\",\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.changeCosts,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \"SUBMIT\")))));\n  }\n\n}\n\nexport default Puzzle;","map":{"version":3,"sources":["/Users/markyu/Desktop/work/fetch-robotics/path_planner/client/src/components/puzzle/puzzle.component.js"],"names":["React","Board","Popup","Adapter","Puzzle","Component","constructor","props","handleSubmit","resCreateMap","createMap","state","inputHeight","inputWidth","setState","settings","mapWidth","mapHeight","startI","resCreateStart","i","startJ","j","goalI","resCreateGoal","goalJ","paths","resGetPath","changeMap","console","log","start","goal","costs","changeStart","createStart","inputStartI","inputStartJ","createGoal","createCost","getPath","changeGoal","inputGoalI","inputGoalJ","changeCosts","JSONArray","inputCosts","split","costObjects","map","item","JSON","parse","resCreateCost","handleChange","e","name","value","target","updateMovement","newI","newJ","render","changCosts"],"mappings":"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","sourcesContent":["// TODOS: 1. List of obstacles\n\nimport React from 'react';\nimport './puzzle.styles.scss';\n\nimport Board from '../board/board.component';\nimport Popup from '../popup/popup.component';\n\nimport Adapter from '../../api/ApiAdapter';\n\nclass Puzzle extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            settings: true,\n            mapWidth: 0,\n            mapHeight: 0,\n            inputWidth: 0,\n            inputHeight: 0,\n            startI: 0,\n            startJ: 0,\n            inputStartI: 0,\n            inputStartJ: 0,\n            goalI: 0,\n            goalJ: 0,\n            inputGoalI: 0,\n            inputGoalJ: 0,\n            inputCosts: '',\n            costs: [],\n            paths: [],\n        }\n    }\n\n    // shouldComponentUpdate(nextProps, nextState) {\n    //     // console.log(nextState);\n    //     return true;\n    // }\n\n    handleSubmit = async () => {\n        const resCreateMap = await Adapter.createMap(this.state.inputHeight, this.state.inputWidth);\n        // const resCreateStart = await Adapter.createStart(this.state.startI, this.state.startJ);\n        // const resCreateGoal = await Adapter.createGoal(this.state.goalI, this.state.goalJ);\n        // const resGetPath = await Adapter.getPath();\n        this.setState({\n            settings: false,\n            mapWidth: resCreateMap.mapWidth, \n            mapHeight: resCreateMap.mapHeight,\n            startI: resCreateStart.i,\n            startJ: resCreateStart.j,\n            goalI: resCreateGoal.i,\n            goalJ: resCreateGoal.j,\n            paths: resGetPath.paths\n        });\n    }\n\n    // RESET COSTS TODO\n    changeMap = async () => {\n        const resCreateMap = await Adapter.createMap(this.state.inputHeight, this.state.inputWidth);\n        // const resCreateStart = await Adapter.createStart(0, 0);\n        // const resCreateGoal = await Adapter.createGoal(this.state.inputHeight-1, this.state.inputWidth-1);\n        // const resCreateCost = await Adapter.createCost();\n        // const resGetPath = await Adapter.getPath();\n        // console.log(resCreateStart);\n        // console.log(resCreateGoal);\n        console.log(resCreateMap);\n\n        this.setState({\n            mapWidth: resCreateMap.mapWidth, \n            mapHeight: resCreateMap.mapHeight,\n            startI: resCreateMap.start.i,\n            startJ: resCreateMap.start.j,\n            goalI: resCreateMap.goal.i,\n            goalJ: resCreateMap.goal.j,\n            costs: [],\n            paths: resCreateMap.paths\n        });\n    }\n\n    changeStart = async () => {\n        await Adapter.createMap(this.state.inputHeight, this.state.inputWidth);\n        const resCreateStart = await Adapter.createStart(this.state.inputStartI, this.state.inputStartJ);\n        await Adapter.createGoal(this.state.goalI, this.state.goalJ);\n        await Adapter.createCost(this.state.costs);\n        const resGetPath = await Adapter.getPath();\n        // console.log(resCreateStart);\n\n        this.setState({\n            startI: resCreateStart.i,\n            startJ: resCreateStart.j,\n            paths: resGetPath.paths\n        });\n    }\n\n    changeGoal = async() => {\n        await Adapter.createMap(this.state.inputHeight, this.state.inputWidth);\n        await Adapter.createStart(this.state.startI, this.state.startJ);\n        const resCreateGoal = await Adapter.createGoal(this.state.inputGoalI, this.state.inputGoalJ);\n        await Adapter.createCost(this.state.costs);\n        const resGetPath = await Adapter.getPath();\n        // console.log(resGetPath);\n        // console.log(resCreateStart);\n\n        this.setState({\n            goalI: resCreateGoal.i,\n            goalJ: resCreateGoal.j,\n            paths: resGetPath.paths\n        });\n    }\n\n    changeCosts = async () => {\n        // console.log(this.state.costs.split(','));\n        const JSONArray = this.state.inputCosts.split('|');\n        const costObjects = JSONArray.map((item) => {\n            // console.log(item);\n            return JSON.parse(item);\n        });\n        await Adapter.createMap(this.state.inputHeight, this.state.inputWidth);\n        await Adapter.createStart(this.state.inputStartI, this.state.inputStartJ);\n        await Adapter.createGoal(this.state.goalI, this.state.goalJ);\n        const resCreateCost = await Adapter.createCost(costObjects);\n        const resGetPath = await Adapter.getPath();\n        console.log(resCreateCost);\n        this.setState({\n            costs: resCreateCost,\n            paths: resGetPath.paths\n        });\n    }\n\n    handleChange = e => {\n        const {name, value} = e.target;\n        this.setState({[name]: value});\n    }\n\n    updateMovement = (newI, newJ) => {\n        this.setState({\n            inputStartI: newI,\n            inputStartJ: newJ\n        });\n    }\n    \n\n    render() {\n        const start = {i: this.state.startI, j: this.state.startJ};\n        const goal = {i: this.state.goalI, j: this.state.goalJ};\n        return(\n            <div>\n                {this.state.settings ?\n                    <Popup \n                        handleSubmit={this.handleSubmit} \n                        handleChange={this.handleChange} \n                        // inputHeight={this.state.inputHeight}\n                        // inputWidth={this.state.inputWidth}\n                    />\n                    :\n                    <div>\n                        <Board \n                            width={this.state.mapWidth} \n                            height={this.state.mapHeight} \n                            start={start} \n                            goal={goal}\n                            costs={this.state.costs}\n                            paths={this.state.paths}\n                            updateMovement={this.updateMovement}\n                            changeStart={this.changeStart}\n                        />\n                        <div className='config'>\n                            <div>\n                                <span>Map:</span>\n                                <form id='changeMap' onSubmit={this.changeMap}>\n                                    <span>i:</span>\n                                    <input name='inputHeight' type='number' onChange={this.handleChange} required />\n                                    <span>j:</span>\n                                    <input name='inputWidth' type='number' onChange={this.handleChange} required />\n                                </form>\n                                <button type='submit' onClick={this.changeMap}>SUBMIT</button>\n                            </div>\n                            <div>\n                                <span>Start:</span>\n                                <form id='changeStart' onSubmit={this.changeStart}>\n                                    <span>i:</span>\n                                    <input name='inputStartI' type='number' onChange={this.handleChange} required />\n                                    <span>j:</span>\n                                    <input name='inputStartJ' type='number' onChange={this.handleChange} required />\n                                </form>\n                                <button type='submit' onClick={this.changeStart}>SUBMIT</button>\n                            </div>\n                            <div>\n                                <span>Goal:</span>\n                                <form id='changeGoal' onSubmit={this.changeGoal}>\n                                    <span>i:</span>\n                                    <input name='inputGoalI' type='number' onChange={this.handleChange} required />\n                                    <span>j:</span>\n                                    <input name='inputGoalJ' type='number' onChange={this.handleChange} required />\n                                </form>\n                                <button type='submit' onClick={this.changeGoal}>SUBMIT</button>\n                            </div>\n                            <div>\n                                <span>Costs:</span>\n                                <form id='changeCosts' onSubmit={this.changCosts}>\n                                    <input className='costs' name='inputCosts' onChange={this.handleChange} required />\n                                </form>\n                                <button type='submit' onClick={this.changeCosts}>SUBMIT</button>\n                            </div>\n                        </div>\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default Puzzle;"]},"metadata":{},"sourceType":"module"}
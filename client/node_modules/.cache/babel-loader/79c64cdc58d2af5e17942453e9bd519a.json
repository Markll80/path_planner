{"ast":null,"code":"var _jsxFileName = \"/Users/markyu/Desktop/work/fetch-robotics/path_planner/client/src/components/puzzle/puzzle.component.js\";\n// TODOS: 1. List of obstacles\nimport React from 'react';\nimport './puzzle.styles.scss';\nimport Board from '../board/board.component';\nimport Popup from '../popup/popup.component';\nimport Adapter from '../../api/ApiAdapter';\n\nclass Puzzle extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async () => {\n      const resCreateMap = await Adapter.createMap(this.state.inputHeight, this.state.inputWidth); // const resCreateStart = await Adapter.createStart(this.state.startI, this.state.startJ);\n      // const resCreateGoal = await Adapter.createGoal(this.state.goalI, this.state.goalJ);\n      // const resGetPath = await Adapter.getPath();\n\n      this.setState({\n        settings: false,\n        mapWidth: resCreateMap.mapWidth,\n        mapHeight: resCreateMap.mapHeight,\n        // inputWidth: resCreateMap.mapWidth,\n        // inputHeight: resCreateMap.mapHeight,\n        // startI: resCreateMap.start.i,\n        // startJ: resCreateMap.start.j,\n        // goalI: resCreateMap.goal.i,\n        // goalJ: resCreateMap.goal.j,\n        paths: resCreateMap.paths\n      });\n    };\n\n    this.cellClickHandler = async location => {\n      location.value = 10;\n      const resCreateCost = await Adapter.createCost(JSON.stringify(location));\n      console.log(resCreateCost);\n    };\n\n    this.changeMap = async () => {\n      const resCreateMap = await Adapter.createMap(this.state.inputHeight, this.state.inputWidth); // const resCreateStart = await Adapter.createStart(0, 0);\n      // const resCreateGoal = await Adapter.createGoal(this.state.inputHeight-1, this.state.inputWidth-1);\n      // const resCreateCost = await Adapter.createCost();\n      // const resGetPath = await Adapter.getPath();\n      // console.log(resCreateStart);\n      // console.log(resCreateGoal);\n\n      console.log(resCreateMap.mapWidth);\n      console.log(resCreateMap.mapHeight);\n      this.setState({\n        settings: false,\n        mapWidth: resCreateMap.mapWidth,\n        mapHeight: resCreateMap.mapHeight,\n        startI: resCreateMap.start.i,\n        startJ: resCreateMap.start.j,\n        inputStartI: resCreateMap.start.i,\n        inputStartJ: resCreateMap.start.j,\n        goalI: resCreateMap.goal.i,\n        goalJ: resCreateMap.goal.j,\n        inputGoalI: resCreateMap.goal.i,\n        inputGoalJ: resCreateMap.goal.j,\n        costs: [],\n        paths: resCreateMap.paths\n      });\n    };\n\n    this.changeStart = async () => {\n      // await Adapter.createMap(this.state.inputHeight, this.state.inputWidth);\n      const resCreateStart = await Adapter.createStart(this.state.inputStartI, this.state.inputStartJ);\n\n      if (resCreateStart.status === 403) {\n        alert('Invalid Start! Please check your fiedls (Starting coordinates should be non negative, floating numbers will be rounded down to the nearest integers)');\n        return;\n      } // await Adapter.createGoal(this.state.goalI, this.state.goalJ);\n      // await Adapter.createCost(this.state.costs);\n      // const resGetPath = await Adapter.getPath();\n      // console.log(resCreateStart);\n      // console.log(resCreateStart);\n\n\n      this.setState({\n        startI: resCreateStart.i,\n        startJ: resCreateStart.j,\n        inputStartI: resCreateStart.i,\n        inputStartJ: resCreateStart.j,\n        paths: resCreateStart.paths\n      });\n    };\n\n    this.changeGoal = async () => {\n      // await Adapter.createMap(this.state.inputHeight, this.state.inputWidth);\n      // await Adapter.createStart(this.state.startI, this.state.startJ);\n      const resCreateGoal = await Adapter.createGoal(this.state.inputGoalI, this.state.inputGoalJ);\n\n      if (resCreateGoal.status === 403) {\n        alert('Invalid goal! Please check your fields (Your goal coordinates should be non negative, floating numbers will be rounded down to the nearest integers.)');\n        return;\n      } // await Adapter.createCost(this.state.costs);\n      // const resGetPath = await Adapter.getPath();\n      // console.log(resGetPath);\n      // console.log(resCreateStart);\n\n\n      this.setState({\n        goalI: resCreateGoal.i,\n        goalJ: resCreateGoal.j,\n        inputGoalI: resCreateGoal.i,\n        inputGoalJ: resCreateGoal.j,\n        paths: resCreateGoal.paths\n      });\n    };\n\n    this.changeCosts = async () => {\n      // console.log(this.state.costs.split(','));\n      // const JSONArray = this.state.inputCosts.split('|');\n      // const costObjects = JSONArray.map((item) => {\n      //     // console.log(item);\n      //     return JSON.parse(item);\n      // });\n      // await Adapter.createMap(this.state.inputHeight, this.state.inputWidth);\n      // await Adapter.createStart(this.state.inputStartI, this.state.inputStartJ);\n      // await Adapter.createGoal(this.state.goalI, this.state.goalJ);\n      const resCreateCost = await Adapter.createCost(this.state.inputCosts);\n\n      if (resCreateCost.status === 403) {\n        alert('Invalid JSON input! JSON example: {\"i\": 2, \"j\": 2, \"value\": 10}');\n        this.setState({\n          inputCosts: ''\n        });\n        return;\n      } // const resGetPath = await Adapter.getPath();\n      // console.log(resCreateCost);\n\n\n      this.setState({\n        costs: resCreateCost.costs,\n        paths: resCreateCost.paths\n      });\n    };\n\n    this.handleChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.updateMovement = (newI, newJ) => {\n      this.setState({\n        inputStartI: newI,\n        inputStartJ: newJ\n      });\n    };\n\n    this.state = {\n      settings: true,\n      mapWidth: 0,\n      mapHeight: 0,\n      inputWidth: 0,\n      inputHeight: 0,\n      startI: 0,\n      startJ: 0,\n      inputStartI: 0,\n      inputStartJ: 0,\n      goalI: 0,\n      goalJ: 0,\n      inputGoalI: 0,\n      inputGoalJ: 0,\n      inputCosts: '',\n      costs: [],\n      paths: []\n    };\n  } // shouldComponentUpdate(nextProps, nextState) {\n  //     // console.log(nextState);\n  //     return true;\n  // }\n\n\n  render() {\n    const start = {\n      i: this.state.startI,\n      j: this.state.startJ\n    };\n    const goal = {\n      i: this.state.goalI,\n      j: this.state.goalJ\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, this.state.settings ? React.createElement(Popup, {\n      changeMap: this.changeMap,\n      handleChange: this.handleChange // inputHeight={this.state.inputHeight}\n      // inputWidth={this.state.inputWidth}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(Board, {\n      width: this.state.mapWidth,\n      height: this.state.mapHeight,\n      start: start,\n      goal: goal,\n      costs: this.state.costs,\n      paths: this.state.paths,\n      updateMovement: this.updateMovement,\n      changeStart: this.changeStart,\n      cellClickHandler: this.cellClickHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"config\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"Map:\"), React.createElement(\"form\", {\n      id: \"changeMap\",\n      onSubmit: this.changeMap,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \"i:\"), React.createElement(\"input\", {\n      name: \"inputHeight\",\n      type: \"number\",\n      value: this.state.inputHeight,\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \"j:\"), React.createElement(\"input\", {\n      name: \"inputWidth\",\n      type: \"number\",\n      value: this.state.inputWidth,\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.changeMap,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \"SUBMIT\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, \"Start:\"), React.createElement(\"form\", {\n      id: \"changeStart\",\n      onSubmit: this.changeStart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, \"i:\"), React.createElement(\"input\", {\n      name: \"inputStartI\",\n      type: \"number\",\n      value: this.state.inputStartI,\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, \"j:\"), React.createElement(\"input\", {\n      name: \"inputStartJ\",\n      type: \"number\",\n      value: this.state.inputStartJ,\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.changeStart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, \"SUBMIT\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, \"Goal:\"), React.createElement(\"form\", {\n      id: \"changeGoal\",\n      onSubmit: this.changeGoal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, \"i:\"), React.createElement(\"input\", {\n      name: \"inputGoalI\",\n      type: \"number\",\n      value: this.state.inputGoalI,\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, \"j:\"), React.createElement(\"input\", {\n      name: \"inputGoalJ\",\n      type: \"number\",\n      value: this.state.inputGoalJ,\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.changeGoal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, \"SUBMIT\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, \"Costs:\"), React.createElement(\"form\", {\n      id: \"changeCosts\",\n      onSubmit: this.changCosts,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"costs\",\n      name: \"inputCosts\",\n      value: this.state.inputCosts,\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.changeCosts,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, \"SUBMIT\")))));\n  }\n\n}\n\nexport default Puzzle;","map":{"version":3,"sources":["/Users/markyu/Desktop/work/fetch-robotics/path_planner/client/src/components/puzzle/puzzle.component.js"],"names":["React","Board","Popup","Adapter","Puzzle","Component","constructor","props","handleSubmit","resCreateMap","createMap","state","inputHeight","inputWidth","setState","settings","mapWidth","mapHeight","paths","cellClickHandler","location","value","resCreateCost","createCost","JSON","stringify","console","log","changeMap","startI","start","i","startJ","j","inputStartI","inputStartJ","goalI","goal","goalJ","inputGoalI","inputGoalJ","costs","changeStart","resCreateStart","createStart","status","alert","changeGoal","resCreateGoal","createGoal","changeCosts","inputCosts","handleChange","e","name","target","updateMovement","newI","newJ","render","changCosts"],"mappings":";AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sBAAP;AAEA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AAEA,OAAOC,OAAP,MAAoB,sBAApB;;AAEA,MAAMC,MAAN,SAAqBJ,KAAK,CAACK,SAA3B,CAAqC;AAEjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SA2BnBC,YA3BmB,GA2BJ,YAAY;AACvB,YAAMC,YAAY,GAAG,MAAMN,OAAO,CAACO,SAAR,CAAkB,KAAKC,KAAL,CAAWC,WAA7B,EAA0C,KAAKD,KAAL,CAAWE,UAArD,CAA3B,CADuB,CAEvB;AACA;AACA;;AACA,WAAKC,QAAL,CAAc;AACVC,QAAAA,QAAQ,EAAE,KADA;AAEVC,QAAAA,QAAQ,EAAEP,YAAY,CAACO,QAFb;AAGVC,QAAAA,SAAS,EAAER,YAAY,CAACQ,SAHd;AAIV;AACA;AACA;AACA;AACA;AACA;AACAC,QAAAA,KAAK,EAAET,YAAY,CAACS;AAVV,OAAd;AAYH,KA5CkB;;AAAA,SA8CnBC,gBA9CmB,GA8CA,MAAOC,QAAP,IAAoB;AACnCA,MAAAA,QAAQ,CAACC,KAAT,GAAiB,EAAjB;AACA,YAAMC,aAAa,GAAG,MAAMnB,OAAO,CAACoB,UAAR,CAAmBC,IAAI,CAACC,SAAL,CAAeL,QAAf,CAAnB,CAA5B;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYL,aAAZ;AACH,KAlDkB;;AAAA,SAqDnBM,SArDmB,GAqDP,YAAY;AACpB,YAAMnB,YAAY,GAAG,MAAMN,OAAO,CAACO,SAAR,CAAkB,KAAKC,KAAL,CAAWC,WAA7B,EAA0C,KAAKD,KAAL,CAAWE,UAArD,CAA3B,CADoB,CAEpB;AACA;AACA;AACA;AACA;AACA;;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAYlB,YAAY,CAACO,QAAzB;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAYlB,YAAY,CAACQ,SAAzB;AAEA,WAAKH,QAAL,CAAc;AACVC,QAAAA,QAAQ,EAAE,KADA;AAEVC,QAAAA,QAAQ,EAAEP,YAAY,CAACO,QAFb;AAGVC,QAAAA,SAAS,EAAER,YAAY,CAACQ,SAHd;AAIVY,QAAAA,MAAM,EAAEpB,YAAY,CAACqB,KAAb,CAAmBC,CAJjB;AAKVC,QAAAA,MAAM,EAAEvB,YAAY,CAACqB,KAAb,CAAmBG,CALjB;AAMVC,QAAAA,WAAW,EAAEzB,YAAY,CAACqB,KAAb,CAAmBC,CANtB;AAOVI,QAAAA,WAAW,EAAE1B,YAAY,CAACqB,KAAb,CAAmBG,CAPtB;AAQVG,QAAAA,KAAK,EAAE3B,YAAY,CAAC4B,IAAb,CAAkBN,CARf;AASVO,QAAAA,KAAK,EAAE7B,YAAY,CAAC4B,IAAb,CAAkBJ,CATf;AAUVM,QAAAA,UAAU,EAAE9B,YAAY,CAAC4B,IAAb,CAAkBN,CAVpB;AAWVS,QAAAA,UAAU,EAAE/B,YAAY,CAAC4B,IAAb,CAAkBJ,CAXpB;AAYVQ,QAAAA,KAAK,EAAE,EAZG;AAaVvB,QAAAA,KAAK,EAAET,YAAY,CAACS;AAbV,OAAd;AAeH,KA/EkB;;AAAA,SAiFnBwB,WAjFmB,GAiFL,YAAY;AACtB;AACA,YAAMC,cAAc,GAAG,MAAMxC,OAAO,CAACyC,WAAR,CAAoB,KAAKjC,KAAL,CAAWuB,WAA/B,EAA4C,KAAKvB,KAAL,CAAWwB,WAAvD,CAA7B;;AACA,UAAGQ,cAAc,CAACE,MAAf,KAA0B,GAA7B,EAAkC;AAC9BC,QAAAA,KAAK,CAAC,sJAAD,CAAL;AACA;AACH,OANqB,CAOtB;AACA;AACA;AACA;AACA;;;AAEA,WAAKhC,QAAL,CAAc;AACVe,QAAAA,MAAM,EAAEc,cAAc,CAACZ,CADb;AAEVC,QAAAA,MAAM,EAAEW,cAAc,CAACV,CAFb;AAGVC,QAAAA,WAAW,EAAES,cAAc,CAACZ,CAHlB;AAIVI,QAAAA,WAAW,EAAEQ,cAAc,CAACV,CAJlB;AAKVf,QAAAA,KAAK,EAAEyB,cAAc,CAACzB;AALZ,OAAd;AAOH,KArGkB;;AAAA,SAuGnB6B,UAvGmB,GAuGN,YAAW;AACpB;AACA;AACA,YAAMC,aAAa,GAAG,MAAM7C,OAAO,CAAC8C,UAAR,CAAmB,KAAKtC,KAAL,CAAW4B,UAA9B,EAA0C,KAAK5B,KAAL,CAAW6B,UAArD,CAA5B;;AACA,UAAGQ,aAAa,CAACH,MAAd,KAAyB,GAA5B,EAAiC;AAC7BC,QAAAA,KAAK,CAAC,uJAAD,CAAL;AACA;AACH,OAPmB,CAQpB;AACA;AACA;AACA;;;AAEA,WAAKhC,QAAL,CAAc;AACVsB,QAAAA,KAAK,EAAEY,aAAa,CAACjB,CADX;AAEVO,QAAAA,KAAK,EAAEU,aAAa,CAACf,CAFX;AAGVM,QAAAA,UAAU,EAAES,aAAa,CAACjB,CAHhB;AAIVS,QAAAA,UAAU,EAAEQ,aAAa,CAACf,CAJhB;AAKVf,QAAAA,KAAK,EAAE8B,aAAa,CAAC9B;AALX,OAAd;AAOH,KA3HkB;;AAAA,SA6HnBgC,WA7HmB,GA6HL,YAAY;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAM5B,aAAa,GAAG,MAAMnB,OAAO,CAACoB,UAAR,CAAmB,KAAKZ,KAAL,CAAWwC,UAA9B,CAA5B;;AACA,UAAG7B,aAAa,CAACuB,MAAd,KAAyB,GAA5B,EAAiC;AAC7BC,QAAAA,KAAK,CAAC,iEAAD,CAAL;AACA,aAAKhC,QAAL,CAAc;AAACqC,UAAAA,UAAU,EAAE;AAAb,SAAd;AACA;AACH,OAfqB,CAgBtB;AACA;;;AACA,WAAKrC,QAAL,CAAc;AACV2B,QAAAA,KAAK,EAAEnB,aAAa,CAACmB,KADX;AAEVvB,QAAAA,KAAK,EAAEI,aAAa,CAACJ;AAFX,OAAd;AAIH,KAnJkB;;AAAA,SAqJnBkC,YArJmB,GAqJJC,CAAC,IAAI;AAChB,YAAM;AAACC,QAAAA,IAAD;AAAOjC,QAAAA;AAAP,UAAgBgC,CAAC,CAACE,MAAxB;AACA,WAAKzC,QAAL,CAAc;AAAC,SAACwC,IAAD,GAAQjC;AAAT,OAAd;AACH,KAxJkB;;AAAA,SA0JnBmC,cA1JmB,GA0JF,CAACC,IAAD,EAAOC,IAAP,KAAgB;AAC7B,WAAK5C,QAAL,CAAc;AACVoB,QAAAA,WAAW,EAAEuB,IADH;AAEVtB,QAAAA,WAAW,EAAEuB;AAFH,OAAd;AAIH,KA/JkB;;AAEf,SAAK/C,KAAL,GAAa;AACTI,MAAAA,QAAQ,EAAE,IADD;AAETC,MAAAA,QAAQ,EAAE,CAFD;AAGTC,MAAAA,SAAS,EAAE,CAHF;AAITJ,MAAAA,UAAU,EAAE,CAJH;AAKTD,MAAAA,WAAW,EAAE,CALJ;AAMTiB,MAAAA,MAAM,EAAE,CANC;AAOTG,MAAAA,MAAM,EAAE,CAPC;AAQTE,MAAAA,WAAW,EAAE,CARJ;AASTC,MAAAA,WAAW,EAAE,CATJ;AAUTC,MAAAA,KAAK,EAAE,CAVE;AAWTE,MAAAA,KAAK,EAAE,CAXE;AAYTC,MAAAA,UAAU,EAAE,CAZH;AAaTC,MAAAA,UAAU,EAAE,CAbH;AAcTW,MAAAA,UAAU,EAAE,EAdH;AAeTV,MAAAA,KAAK,EAAE,EAfE;AAgBTvB,MAAAA,KAAK,EAAE;AAhBE,KAAb;AAkBH,GAtBgC,CAwBjC;AACA;AACA;AACA;;;AAyIAyC,EAAAA,MAAM,GAAG;AACL,UAAM7B,KAAK,GAAG;AAACC,MAAAA,CAAC,EAAE,KAAKpB,KAAL,CAAWkB,MAAf;AAAuBI,MAAAA,CAAC,EAAE,KAAKtB,KAAL,CAAWqB;AAArC,KAAd;AACA,UAAMK,IAAI,GAAG;AAACN,MAAAA,CAAC,EAAE,KAAKpB,KAAL,CAAWyB,KAAf;AAAsBH,MAAAA,CAAC,EAAE,KAAKtB,KAAL,CAAW2B;AAApC,KAAb;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAK3B,KAAL,CAAWI,QAAX,GACG,oBAAC,KAAD;AACI,MAAA,SAAS,EAAE,KAAKa,SADpB;AAEI,MAAA,YAAY,EAAE,KAAKwB,YAFvB,CAGI;AACA;AAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,GAQG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AACI,MAAA,KAAK,EAAE,KAAKzC,KAAL,CAAWK,QADtB;AAEI,MAAA,MAAM,EAAE,KAAKL,KAAL,CAAWM,SAFvB;AAGI,MAAA,KAAK,EAAEa,KAHX;AAII,MAAA,IAAI,EAAEO,IAJV;AAKI,MAAA,KAAK,EAAE,KAAK1B,KAAL,CAAW8B,KALtB;AAMI,MAAA,KAAK,EAAE,KAAK9B,KAAL,CAAWO,KANtB;AAOI,MAAA,cAAc,EAAE,KAAKsC,cAPzB;AAQI,MAAA,WAAW,EAAE,KAAKd,WARtB;AASI,MAAA,gBAAgB,EAAE,KAAKvB,gBAT3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAYI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI;AAAM,MAAA,EAAE,EAAC,WAAT;AAAqB,MAAA,QAAQ,EAAE,KAAKS,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEI;AAAO,MAAA,IAAI,EAAC,aAAZ;AAA0B,MAAA,IAAI,EAAC,QAA/B;AAAwC,MAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWC,WAA1D;AAAuE,MAAA,QAAQ,EAAE,KAAKwC,YAAtF;AAAoG,MAAA,QAAQ,MAA5G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,EAII;AAAO,MAAA,IAAI,EAAC,YAAZ;AAAyB,MAAA,IAAI,EAAC,QAA9B;AAAuC,MAAA,KAAK,EAAE,KAAKzC,KAAL,CAAWE,UAAzD;AAAqE,MAAA,QAAQ,EAAE,KAAKuC,YAApF;AAAkG,MAAA,QAAQ,MAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CAFJ,EAQI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,KAAKxB,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ,CADJ,EAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAM,MAAA,EAAE,EAAC,aAAT;AAAuB,MAAA,QAAQ,EAAE,KAAKc,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEI;AAAO,MAAA,IAAI,EAAC,aAAZ;AAA0B,MAAA,IAAI,EAAC,QAA/B;AAAwC,MAAA,KAAK,EAAE,KAAK/B,KAAL,CAAWuB,WAA1D;AAAuE,MAAA,QAAQ,EAAE,KAAKkB,YAAtF;AAAoG,MAAA,QAAQ,MAA5G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,EAII;AAAO,MAAA,IAAI,EAAC,aAAZ;AAA0B,MAAA,IAAI,EAAC,QAA/B;AAAwC,MAAA,KAAK,EAAE,KAAKzC,KAAL,CAAWwB,WAA1D;AAAuE,MAAA,QAAQ,EAAE,KAAKiB,YAAtF;AAAoG,MAAA,QAAQ,MAA5G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CAFJ,EAQI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,KAAKV,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ,CAXJ,EAqBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI;AAAM,MAAA,EAAE,EAAC,YAAT;AAAsB,MAAA,QAAQ,EAAE,KAAKK,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEI;AAAO,MAAA,IAAI,EAAC,YAAZ;AAAyB,MAAA,IAAI,EAAC,QAA9B;AAAuC,MAAA,KAAK,EAAE,KAAKpC,KAAL,CAAW4B,UAAzD;AAAqE,MAAA,QAAQ,EAAE,KAAKa,YAApF;AAAkG,MAAA,QAAQ,MAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,EAII;AAAO,MAAA,IAAI,EAAC,YAAZ;AAAyB,MAAA,IAAI,EAAC,QAA9B;AAAuC,MAAA,KAAK,EAAE,KAAKzC,KAAL,CAAW6B,UAAzD;AAAqE,MAAA,QAAQ,EAAE,KAAKY,YAApF;AAAkG,MAAA,QAAQ,MAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CAFJ,EAQI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,KAAKL,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ,CArBJ,EA+BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAM,MAAA,EAAE,EAAC,aAAT;AAAuB,MAAA,QAAQ,EAAE,KAAKa,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAyB,MAAA,IAAI,EAAC,YAA9B;AAA2C,MAAA,KAAK,EAAE,KAAKjD,KAAL,CAAWwC,UAA7D;AAAyE,MAAA,QAAQ,EAAE,KAAKC,YAAxF;AAAsG,MAAA,QAAQ,MAA9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFJ,EAKI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,KAAKF,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,CA/BJ,CAZJ,CATR,CADJ;AAiEH;;AAxOgC;;AA2OrC,eAAe9C,MAAf","sourcesContent":["// TODOS: 1. List of obstacles\n\nimport React from 'react';\nimport './puzzle.styles.scss';\n\nimport Board from '../board/board.component';\nimport Popup from '../popup/popup.component';\n\nimport Adapter from '../../api/ApiAdapter';\n\nclass Puzzle extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            settings: true,\n            mapWidth: 0,\n            mapHeight: 0,\n            inputWidth: 0,\n            inputHeight: 0,\n            startI: 0,\n            startJ: 0,\n            inputStartI: 0,\n            inputStartJ: 0,\n            goalI: 0,\n            goalJ: 0,\n            inputGoalI: 0,\n            inputGoalJ: 0,\n            inputCosts: '',\n            costs: [],\n            paths: [],\n        }\n    }\n\n    // shouldComponentUpdate(nextProps, nextState) {\n    //     // console.log(nextState);\n    //     return true;\n    // }\n\n    handleSubmit = async () => {\n        const resCreateMap = await Adapter.createMap(this.state.inputHeight, this.state.inputWidth);\n        // const resCreateStart = await Adapter.createStart(this.state.startI, this.state.startJ);\n        // const resCreateGoal = await Adapter.createGoal(this.state.goalI, this.state.goalJ);\n        // const resGetPath = await Adapter.getPath();\n        this.setState({\n            settings: false,\n            mapWidth: resCreateMap.mapWidth, \n            mapHeight: resCreateMap.mapHeight,\n            // inputWidth: resCreateMap.mapWidth,\n            // inputHeight: resCreateMap.mapHeight,\n            // startI: resCreateMap.start.i,\n            // startJ: resCreateMap.start.j,\n            // goalI: resCreateMap.goal.i,\n            // goalJ: resCreateMap.goal.j,\n            paths: resCreateMap.paths\n        });\n    }\n\n    cellClickHandler = async (location) => {\n        location.value = 10;\n        const resCreateCost = await Adapter.createCost(JSON.stringify(location));\n        console.log(resCreateCost);\n    }\n\n    // RESET COSTS TODO\n    changeMap = async () => {\n        const resCreateMap = await Adapter.createMap(this.state.inputHeight, this.state.inputWidth);\n        // const resCreateStart = await Adapter.createStart(0, 0);\n        // const resCreateGoal = await Adapter.createGoal(this.state.inputHeight-1, this.state.inputWidth-1);\n        // const resCreateCost = await Adapter.createCost();\n        // const resGetPath = await Adapter.getPath();\n        // console.log(resCreateStart);\n        // console.log(resCreateGoal);\n        console.log(resCreateMap.mapWidth);\n        console.log(resCreateMap.mapHeight);\n\n        this.setState({\n            settings: false,\n            mapWidth: resCreateMap.mapWidth, \n            mapHeight: resCreateMap.mapHeight,\n            startI: resCreateMap.start.i,\n            startJ: resCreateMap.start.j,\n            inputStartI: resCreateMap.start.i,\n            inputStartJ: resCreateMap.start.j,\n            goalI: resCreateMap.goal.i,\n            goalJ: resCreateMap.goal.j,\n            inputGoalI: resCreateMap.goal.i,\n            inputGoalJ: resCreateMap.goal.j,\n            costs: [],\n            paths: resCreateMap.paths\n        });\n    }\n\n    changeStart = async () => {\n        // await Adapter.createMap(this.state.inputHeight, this.state.inputWidth);\n        const resCreateStart = await Adapter.createStart(this.state.inputStartI, this.state.inputStartJ);\n        if(resCreateStart.status === 403) {\n            alert('Invalid Start! Please check your fiedls (Starting coordinates should be non negative, floating numbers will be rounded down to the nearest integers)');\n            return;\n        }\n        // await Adapter.createGoal(this.state.goalI, this.state.goalJ);\n        // await Adapter.createCost(this.state.costs);\n        // const resGetPath = await Adapter.getPath();\n        // console.log(resCreateStart);\n        // console.log(resCreateStart);\n\n        this.setState({\n            startI: resCreateStart.i,\n            startJ: resCreateStart.j,\n            inputStartI: resCreateStart.i,\n            inputStartJ: resCreateStart.j,\n            paths: resCreateStart.paths\n        });\n    }\n\n    changeGoal = async() => {\n        // await Adapter.createMap(this.state.inputHeight, this.state.inputWidth);\n        // await Adapter.createStart(this.state.startI, this.state.startJ);\n        const resCreateGoal = await Adapter.createGoal(this.state.inputGoalI, this.state.inputGoalJ);\n        if(resCreateGoal.status === 403) {\n            alert('Invalid goal! Please check your fields (Your goal coordinates should be non negative, floating numbers will be rounded down to the nearest integers.)');\n            return;\n        }\n        // await Adapter.createCost(this.state.costs);\n        // const resGetPath = await Adapter.getPath();\n        // console.log(resGetPath);\n        // console.log(resCreateStart);\n\n        this.setState({\n            goalI: resCreateGoal.i,\n            goalJ: resCreateGoal.j,\n            inputGoalI: resCreateGoal.i,\n            inputGoalJ: resCreateGoal.j,\n            paths: resCreateGoal.paths\n        });\n    }\n\n    changeCosts = async () => {\n        // console.log(this.state.costs.split(','));\n        // const JSONArray = this.state.inputCosts.split('|');\n        // const costObjects = JSONArray.map((item) => {\n        //     // console.log(item);\n        //     return JSON.parse(item);\n        // });\n        // await Adapter.createMap(this.state.inputHeight, this.state.inputWidth);\n        // await Adapter.createStart(this.state.inputStartI, this.state.inputStartJ);\n        // await Adapter.createGoal(this.state.goalI, this.state.goalJ);\n        const resCreateCost = await Adapter.createCost(this.state.inputCosts);\n        if(resCreateCost.status === 403) {\n            alert('Invalid JSON input! JSON example: {\"i\": 2, \"j\": 2, \"value\": 10}');\n            this.setState({inputCosts: ''});\n            return;\n        }\n        // const resGetPath = await Adapter.getPath();\n        // console.log(resCreateCost);\n        this.setState({\n            costs: resCreateCost.costs,\n            paths: resCreateCost.paths\n        });\n    }\n\n    handleChange = e => {\n        const {name, value} = e.target;\n        this.setState({[name]: value});\n    }\n\n    updateMovement = (newI, newJ) => {\n        this.setState({\n            inputStartI: newI,\n            inputStartJ: newJ\n        });\n    }\n    \n\n    render() {\n        const start = {i: this.state.startI, j: this.state.startJ};\n        const goal = {i: this.state.goalI, j: this.state.goalJ};\n        return(\n            <div>\n                {this.state.settings ?\n                    <Popup \n                        changeMap={this.changeMap} \n                        handleChange={this.handleChange} \n                        // inputHeight={this.state.inputHeight}\n                        // inputWidth={this.state.inputWidth}\n                    />\n                    :\n                    <div>\n                        <Board \n                            width={this.state.mapWidth} \n                            height={this.state.mapHeight} \n                            start={start} \n                            goal={goal}\n                            costs={this.state.costs}\n                            paths={this.state.paths}\n                            updateMovement={this.updateMovement}\n                            changeStart={this.changeStart}\n                            cellClickHandler={this.cellClickHandler}\n                        />\n                        <div className='config'>\n                            <div>\n                                <span>Map:</span>\n                                <form id='changeMap' onSubmit={this.changeMap}>\n                                    <span>i:</span>\n                                    <input name='inputHeight' type='number' value={this.state.inputHeight} onChange={this.handleChange} required />\n                                    <span>j:</span>\n                                    <input name='inputWidth' type='number' value={this.state.inputWidth} onChange={this.handleChange} required />\n                                </form>\n                                <button type='submit' onClick={this.changeMap}>SUBMIT</button>\n                            </div>\n                            <div>\n                                <span>Start:</span>\n                                <form id='changeStart' onSubmit={this.changeStart}>\n                                    <span>i:</span>\n                                    <input name='inputStartI' type='number' value={this.state.inputStartI} onChange={this.handleChange} required />\n                                    <span>j:</span>\n                                    <input name='inputStartJ' type='number' value={this.state.inputStartJ} onChange={this.handleChange} required />\n                                </form>\n                                <button type='submit' onClick={this.changeStart}>SUBMIT</button>\n                            </div>\n                            <div>\n                                <span>Goal:</span>\n                                <form id='changeGoal' onSubmit={this.changeGoal}>\n                                    <span>i:</span>\n                                    <input name='inputGoalI' type='number' value={this.state.inputGoalI} onChange={this.handleChange} required />\n                                    <span>j:</span>\n                                    <input name='inputGoalJ' type='number' value={this.state.inputGoalJ} onChange={this.handleChange} required />\n                                </form>\n                                <button type='submit' onClick={this.changeGoal}>SUBMIT</button>\n                            </div>\n                            <div>\n                                <span>Costs:</span>\n                                <form id='changeCosts' onSubmit={this.changCosts}>\n                                    <input className='costs' name='inputCosts' value={this.state.inputCosts} onChange={this.handleChange} required />\n                                </form>\n                                <button type='submit' onClick={this.changeCosts}>SUBMIT</button>\n                            </div>\n                        </div>\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default Puzzle;"]},"metadata":{},"sourceType":"module"}
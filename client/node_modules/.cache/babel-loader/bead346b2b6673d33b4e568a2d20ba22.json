{"ast":null,"code":"var _jsxFileName = \"/Users/markyu/Desktop/work/fetch-robotics/path_planner/client/src/components/puzzle/puzzle.component.js\";\n// TODOS: 1. List of obstacles\nimport React from 'react';\nimport './puzzle.styles.scss';\nimport Board from '../board/board.component';\nimport Popup from '../popup/popup.component';\nimport Adapter from '../../api/ApiAdapter';\n\nclass Puzzle extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async () => {\n      const resCreateMap = await Adapter.createMap(this.state.inputHeight, this.state.inputWidth); // const resCreateStart = await Adapter.createStart(this.state.startI, this.state.startJ);\n      // const resCreateGoal = await Adapter.createGoal(this.state.goalI, this.state.goalJ);\n      // const resGetPath = await Adapter.getPath();\n\n      this.setState({\n        settings: false,\n        mapWidth: resCreateMap.mapWidth,\n        mapHeight: resCreateMap.mapHeight,\n        // inputWidth: resCreateMap.mapWidth,\n        // inputHeight: resCreateMap.mapHeight,\n        // startI: resCreateMap.start.i,\n        // startJ: resCreateMap.start.j,\n        // goalI: resCreateMap.goal.i,\n        // goalJ: resCreateMap.goal.j,\n        paths: resCreateMap.paths\n      });\n    };\n\n    this.cellClickHandler = async location => {\n      location.value > 1 ? location.value = 1 : location.value = 10;\n      const resCreateCost = await Adapter.createCost(JSON.stringify(location));\n      this.setState({\n        costs: resCreateCost.costs,\n        paths: resCreateCost.paths\n      });\n    };\n\n    this.changeMap = async () => {\n      if (this.state.inputHeight > 10 || this.state.inputWidth > 10) {\n        alert(\"I haven't made the blocks responsive yet so please keep the front-end under size 10 for now :)\");\n      }\n\n      const resCreateMap = await Adapter.createMap(this.state.inputHeight, this.state.inputWidth); // const resCreateStart = await Adapter.createStart(0, 0);\n      // const resCreateGoal = await Adapter.createGoal(this.state.inputHeight-1, this.state.inputWidth-1);\n      // const resCreateCost = await Adapter.createCost();\n      // const resGetPath = await Adapter.getPath();\n      // console.log(resCreateStart);\n      // console.log(resCreateGoal);\n      // console.log(resCreateMap.mapWidth);\n      // console.log(resCreateMap.mapHeight);\n\n      if (resCreateMap.status === 403) {\n        alert('Invalid map data, Please enter numbers that are non negative. (floating numbers will be rounded down)');\n        this.setState({\n          inputWidth: this.state.mapWidth,\n          inputHeight: this.state.mapHeight\n        });\n        return;\n      }\n\n      this.setState({\n        settings: false,\n        mapWidth: resCreateMap.mapWidth,\n        mapHeight: resCreateMap.mapHeight,\n        startI: resCreateMap.start.i,\n        startJ: resCreateMap.start.j,\n        inputStartI: resCreateMap.start.i,\n        inputStartJ: resCreateMap.start.j,\n        goalI: resCreateMap.goal.i,\n        goalJ: resCreateMap.goal.j,\n        inputGoalI: resCreateMap.goal.i,\n        inputGoalJ: resCreateMap.goal.j,\n        costs: [],\n        paths: resCreateMap.paths\n      });\n    };\n\n    this.changeStart = async () => {\n      // await Adapter.createMap(this.state.inputHeight, this.state.inputWidth);\n      if (this.state.inputStartI == this.state.goalI && this.state.inputStartJ == this.state.goalJ) {\n        alert('Found Eve!');\n        this.changeMap();\n        return;\n      }\n\n      const resCreateStart = await Adapter.createStart(this.state.inputStartI, this.state.inputStartJ);\n\n      if (resCreateStart.status === 403) {\n        alert('Invalid Start! Please check your fiedls (Starting coordinates should be non negative, floating numbers will be rounded down)');\n        return;\n      } // await Adapter.createGoal(this.state.goalI, this.state.goalJ);\n      // await Adapter.createCost(this.state.costs);\n      // const resGetPath = await Adapter.getPath();\n      // console.log(resCreateStart);\n      // console.log(resCreateStart);\n\n\n      this.setState({\n        startI: resCreateStart.i,\n        startJ: resCreateStart.j,\n        inputStartI: resCreateStart.i,\n        inputStartJ: resCreateStart.j,\n        paths: resCreateStart.paths\n      });\n    };\n\n    this.changeGoal = async () => {\n      // await Adapter.createMap(this.state.inputHeight, this.state.inputWidth);\n      // await Adapter.createStart(this.state.startI, this.state.startJ);\n      if (this.state.inputGoalI == this.state.startI && this.state.inputGoalJ == this.state.startJ) {\n        alert('Oh wow Eve found Wall-e!');\n        this.changeMap();\n        return;\n      }\n\n      const resCreateGoal = await Adapter.createGoal(this.state.inputGoalI, this.state.inputGoalJ);\n\n      if (resCreateGoal.status === 403) {\n        alert('Invalid goal! Please check your fields (Your goal coordinates should be non negative, floating numbers will be rounded down to the nearest integers.)');\n        return;\n      } // await Adapter.createCost(this.state.costs);\n      // const resGetPath = await Adapter.getPath();\n      // console.log(resGetPath);\n      // console.log(resCreateStart);\n\n\n      this.setState({\n        goalI: resCreateGoal.i,\n        goalJ: resCreateGoal.j,\n        inputGoalI: resCreateGoal.i,\n        inputGoalJ: resCreateGoal.j,\n        paths: resCreateGoal.paths\n      });\n    };\n\n    this.changeCosts = async () => {\n      // console.log(this.state.costs.split(','));\n      // const JSONArray = this.state.inputCosts.split('|');\n      // const costObjects = JSONArray.map((item) => {\n      //     // console.log(item);\n      //     return JSON.parse(item);\n      // });\n      // await Adapter.createMap(this.state.inputHeight, this.state.inputWidth);\n      // await Adapter.createStart(this.state.inputStartI, this.state.inputStartJ);\n      // await Adapter.createGoal(this.state.goalI, this.state.goalJ);\n      const resCreateCost = await Adapter.createCost(this.state.inputCosts);\n\n      if (resCreateCost.status === 403) {\n        alert('Invalid JSON input! JSON example: {\"i\": 2, \"j\": 2, \"value\": 10}, all numbers must be non negative (value must be positive) and please follow the field name in the example (floating numbers will be rounded down)');\n        this.setState({\n          inputCosts: ''\n        });\n        return;\n      } // const resGetPath = await Adapter.getPath();\n      // console.log(resCreateCost);\n\n\n      this.setState({\n        costs: resCreateCost.costs,\n        paths: resCreateCost.paths\n      });\n    };\n\n    this.handleChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.updateMovement = (newI, newJ) => {\n      this.setState({\n        inputStartI: newI,\n        inputStartJ: newJ\n      });\n    };\n\n    this.state = {\n      settings: true,\n      mapWidth: 0,\n      mapHeight: 0,\n      inputWidth: 0,\n      inputHeight: 0,\n      startI: 0,\n      startJ: 0,\n      inputStartI: 0,\n      inputStartJ: 0,\n      goalI: 0,\n      goalJ: 0,\n      inputGoalI: 0,\n      inputGoalJ: 0,\n      inputCosts: '',\n      costs: [],\n      paths: []\n    };\n  } // shouldComponentUpdate(nextProps, nextState) {\n  //     // console.log(nextState);\n  //     return true;\n  // }\n\n\n  render() {\n    const start = {\n      i: this.state.startI,\n      j: this.state.startJ\n    };\n    const goal = {\n      i: this.state.goalI,\n      j: this.state.goalJ\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, this.state.settings ? React.createElement(Popup, {\n      changeMap: this.changeMap,\n      handleChange: this.handleChange // inputHeight={this.state.inputHeight}\n      // inputWidth={this.state.inputWidth}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(Board, {\n      width: this.state.mapWidth,\n      height: this.state.mapHeight,\n      start: start,\n      goal: goal,\n      costs: this.state.costs,\n      paths: this.state.paths,\n      updateMovement: this.updateMovement,\n      changeStart: this.changeStart,\n      cellClickHandler: this.cellClickHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"config\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, \"Map:\"), React.createElement(\"form\", {\n      id: \"changeMap\",\n      onSubmit: this.changeMap,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, \"i:\"), React.createElement(\"input\", {\n      name: \"inputHeight\",\n      type: \"number\",\n      value: this.state.inputHeight,\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, \"j:\"), React.createElement(\"input\", {\n      name: \"inputWidth\",\n      type: \"number\",\n      value: this.state.inputWidth,\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.changeMap,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, \"SUBMIT\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, \"Start:\"), React.createElement(\"form\", {\n      id: \"changeStart\",\n      onSubmit: this.changeStart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, \"i:\"), React.createElement(\"input\", {\n      name: \"inputStartI\",\n      type: \"number\",\n      value: this.state.inputStartI,\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, \"j:\"), React.createElement(\"input\", {\n      name: \"inputStartJ\",\n      type: \"number\",\n      value: this.state.inputStartJ,\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.changeStart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, \"SUBMIT\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, \"Goal:\"), React.createElement(\"form\", {\n      id: \"changeGoal\",\n      onSubmit: this.changeGoal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, \"i:\"), React.createElement(\"input\", {\n      name: \"inputGoalI\",\n      type: \"number\",\n      value: this.state.inputGoalI,\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, \"j:\"), React.createElement(\"input\", {\n      name: \"inputGoalJ\",\n      type: \"number\",\n      value: this.state.inputGoalJ,\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.changeGoal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, \"SUBMIT\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, \"Costs:\"), React.createElement(\"form\", {\n      id: \"changeCosts\",\n      onSubmit: this.changCosts,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"costs\",\n      name: \"inputCosts\",\n      value: this.state.inputCosts,\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.changeCosts,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, \"SUBMIT\")))));\n  }\n\n}\n\nexport default Puzzle;","map":{"version":3,"sources":["/Users/markyu/Desktop/work/fetch-robotics/path_planner/client/src/components/puzzle/puzzle.component.js"],"names":["React","Board","Popup","Adapter","Puzzle","Component","constructor","props","handleSubmit","resCreateMap","createMap","state","inputHeight","inputWidth","setState","settings","mapWidth","mapHeight","paths","cellClickHandler","location","value","resCreateCost","createCost","JSON","stringify","costs","changeMap","alert","status","startI","start","i","startJ","j","inputStartI","inputStartJ","goalI","goal","goalJ","inputGoalI","inputGoalJ","changeStart","resCreateStart","createStart","changeGoal","resCreateGoal","createGoal","changeCosts","inputCosts","handleChange","e","name","target","updateMovement","newI","newJ","render","changCosts"],"mappings":"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","sourcesContent":["// TODOS: 1. List of obstacles\n\nimport React from 'react';\nimport './puzzle.styles.scss';\n\nimport Board from '../board/board.component';\nimport Popup from '../popup/popup.component';\n\nimport Adapter from '../../api/ApiAdapter';\n\nclass Puzzle extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            settings: true,\n            mapWidth: 0,\n            mapHeight: 0,\n            inputWidth: 0,\n            inputHeight: 0,\n            startI: 0,\n            startJ: 0,\n            inputStartI: 0,\n            inputStartJ: 0,\n            goalI: 0,\n            goalJ: 0,\n            inputGoalI: 0,\n            inputGoalJ: 0,\n            inputCosts: '',\n            costs: [],\n            paths: [],\n        }\n    }\n\n    // shouldComponentUpdate(nextProps, nextState) {\n    //     // console.log(nextState);\n    //     return true;\n    // }\n\n    handleSubmit = async () => {\n        const resCreateMap = await Adapter.createMap(this.state.inputHeight, this.state.inputWidth);\n        // const resCreateStart = await Adapter.createStart(this.state.startI, this.state.startJ);\n        // const resCreateGoal = await Adapter.createGoal(this.state.goalI, this.state.goalJ);\n        // const resGetPath = await Adapter.getPath();\n        this.setState({\n            settings: false,\n            mapWidth: resCreateMap.mapWidth, \n            mapHeight: resCreateMap.mapHeight,\n            // inputWidth: resCreateMap.mapWidth,\n            // inputHeight: resCreateMap.mapHeight,\n            // startI: resCreateMap.start.i,\n            // startJ: resCreateMap.start.j,\n            // goalI: resCreateMap.goal.i,\n            // goalJ: resCreateMap.goal.j,\n            paths: resCreateMap.paths\n        });\n    }\n\n    cellClickHandler = async (location) => {\n        location.value > 1 ? location.value = 1 : location.value = 10;\n        const resCreateCost = await Adapter.createCost(JSON.stringify(location));\n        this.setState({\n            costs: resCreateCost.costs,\n            paths: resCreateCost.paths\n        });\n    }\n\n    // RESET COSTS TODO\n    changeMap = async () => {\n        if(this.state.inputHeight > 10 || this.state.inputWidth > 10) {\n            alert(\"I haven't made the blocks responsive yet so please keep the front-end under size 10 for now :)\");\n        }\n        const resCreateMap = await Adapter.createMap(this.state.inputHeight, this.state.inputWidth);\n        // const resCreateStart = await Adapter.createStart(0, 0);\n        // const resCreateGoal = await Adapter.createGoal(this.state.inputHeight-1, this.state.inputWidth-1);\n        // const resCreateCost = await Adapter.createCost();\n        // const resGetPath = await Adapter.getPath();\n        // console.log(resCreateStart);\n        // console.log(resCreateGoal);\n        // console.log(resCreateMap.mapWidth);\n        // console.log(resCreateMap.mapHeight);\n        if(resCreateMap.status === 403) {\n            alert('Invalid map data, Please enter numbers that are non negative. (floating numbers will be rounded down)');\n            this.setState({\n                inputWidth: this.state.mapWidth,\n                inputHeight: this.state.mapHeight\n            });\n            return;\n        }\n\n        this.setState({\n            settings: false,\n            mapWidth: resCreateMap.mapWidth, \n            mapHeight: resCreateMap.mapHeight,\n            startI: resCreateMap.start.i,\n            startJ: resCreateMap.start.j,\n            inputStartI: resCreateMap.start.i,\n            inputStartJ: resCreateMap.start.j,\n            goalI: resCreateMap.goal.i,\n            goalJ: resCreateMap.goal.j,\n            inputGoalI: resCreateMap.goal.i,\n            inputGoalJ: resCreateMap.goal.j,\n            costs: [],\n            paths: resCreateMap.paths\n        });\n    }\n\n    changeStart = async () => {\n        // await Adapter.createMap(this.state.inputHeight, this.state.inputWidth);\n        if(this.state.inputStartI == this.state.goalI && this.state.inputStartJ == this.state.goalJ) {\n            alert('Found Eve!');\n            this.changeMap();\n            return;\n        }\n        const resCreateStart = await Adapter.createStart(this.state.inputStartI, this.state.inputStartJ);\n        if(resCreateStart.status === 403) {\n            alert('Invalid Start! Please check your fiedls (Starting coordinates should be non negative, floating numbers will be rounded down)');\n            return;\n        }\n        // await Adapter.createGoal(this.state.goalI, this.state.goalJ);\n        // await Adapter.createCost(this.state.costs);\n        // const resGetPath = await Adapter.getPath();\n        // console.log(resCreateStart);\n        // console.log(resCreateStart);\n\n        this.setState({\n            startI: resCreateStart.i,\n            startJ: resCreateStart.j,\n            inputStartI: resCreateStart.i,\n            inputStartJ: resCreateStart.j,\n            paths: resCreateStart.paths\n        });\n    }\n\n    changeGoal = async() => {\n        // await Adapter.createMap(this.state.inputHeight, this.state.inputWidth);\n        // await Adapter.createStart(this.state.startI, this.state.startJ);\n        if(this.state.inputGoalI == this.state.startI && this.state.inputGoalJ == this.state.startJ) {\n            alert('Oh wow Eve found Wall-e!');\n            this.changeMap();\n            return;\n        }\n        const resCreateGoal = await Adapter.createGoal(this.state.inputGoalI, this.state.inputGoalJ);\n        if(resCreateGoal.status === 403) {\n            alert('Invalid goal! Please check your fields (Your goal coordinates should be non negative, floating numbers will be rounded down to the nearest integers.)');\n            return;\n        }\n        // await Adapter.createCost(this.state.costs);\n        // const resGetPath = await Adapter.getPath();\n        // console.log(resGetPath);\n        // console.log(resCreateStart);\n\n        this.setState({\n            goalI: resCreateGoal.i,\n            goalJ: resCreateGoal.j,\n            inputGoalI: resCreateGoal.i,\n            inputGoalJ: resCreateGoal.j,\n            paths: resCreateGoal.paths\n        });\n    }\n\n    changeCosts = async () => {\n        // console.log(this.state.costs.split(','));\n        // const JSONArray = this.state.inputCosts.split('|');\n        // const costObjects = JSONArray.map((item) => {\n        //     // console.log(item);\n        //     return JSON.parse(item);\n        // });\n        // await Adapter.createMap(this.state.inputHeight, this.state.inputWidth);\n        // await Adapter.createStart(this.state.inputStartI, this.state.inputStartJ);\n        // await Adapter.createGoal(this.state.goalI, this.state.goalJ);\n        const resCreateCost = await Adapter.createCost(this.state.inputCosts);\n        if(resCreateCost.status === 403) {\n            alert('Invalid JSON input! JSON example: {\"i\": 2, \"j\": 2, \"value\": 10}, all numbers must be non negative (value must be positive) and please follow the field name in the example (floating numbers will be rounded down)');\n            this.setState({inputCosts: ''});\n            return;\n        }\n        // const resGetPath = await Adapter.getPath();\n        // console.log(resCreateCost);\n        this.setState({\n            costs: resCreateCost.costs,\n            paths: resCreateCost.paths\n        });\n    }\n\n    handleChange = e => {\n        const {name, value} = e.target;\n        this.setState({[name]: value});\n    }\n\n    updateMovement = (newI, newJ) => {\n        this.setState({\n            inputStartI: newI,\n            inputStartJ: newJ\n        });\n    }\n    \n\n    render() {\n        const start = {i: this.state.startI, j: this.state.startJ};\n        const goal = {i: this.state.goalI, j: this.state.goalJ};\n        return(\n            <div>\n                {this.state.settings ?\n                    <Popup \n                        changeMap={this.changeMap} \n                        handleChange={this.handleChange} \n                        // inputHeight={this.state.inputHeight}\n                        // inputWidth={this.state.inputWidth}\n                    />\n                    :\n                    <div>\n                        <Board \n                            width={this.state.mapWidth} \n                            height={this.state.mapHeight} \n                            start={start} \n                            goal={goal}\n                            costs={this.state.costs}\n                            paths={this.state.paths}\n                            updateMovement={this.updateMovement}\n                            changeStart={this.changeStart}\n                            cellClickHandler={this.cellClickHandler}\n                        />\n                        <div className='config'>\n                            <div>\n                                <span>Map:</span>\n                                <form id='changeMap' onSubmit={this.changeMap}>\n                                    <span>i:</span>\n                                    <input name='inputHeight' type='number' value={this.state.inputHeight} onChange={this.handleChange} required />\n                                    <span>j:</span>\n                                    <input name='inputWidth' type='number' value={this.state.inputWidth} onChange={this.handleChange} required />\n                                </form>\n                                <button type='submit' onClick={this.changeMap}>SUBMIT</button>\n                            </div>\n                            <div>\n                                <span>Start:</span>\n                                <form id='changeStart' onSubmit={this.changeStart}>\n                                    <span>i:</span>\n                                    <input name='inputStartI' type='number' value={this.state.inputStartI} onChange={this.handleChange} required />\n                                    <span>j:</span>\n                                    <input name='inputStartJ' type='number' value={this.state.inputStartJ} onChange={this.handleChange} required />\n                                </form>\n                                <button type='submit' onClick={this.changeStart}>SUBMIT</button>\n                            </div>\n                            <div>\n                                <span>Goal:</span>\n                                <form id='changeGoal' onSubmit={this.changeGoal}>\n                                    <span>i:</span>\n                                    <input name='inputGoalI' type='number' value={this.state.inputGoalI} onChange={this.handleChange} required />\n                                    <span>j:</span>\n                                    <input name='inputGoalJ' type='number' value={this.state.inputGoalJ} onChange={this.handleChange} required />\n                                </form>\n                                <button type='submit' onClick={this.changeGoal}>SUBMIT</button>\n                            </div>\n                            <div>\n                                <span>Costs:</span>\n                                <form id='changeCosts' onSubmit={this.changCosts}>\n                                    <input className='costs' name='inputCosts' value={this.state.inputCosts} onChange={this.handleChange} required />\n                                </form>\n                                <button type='submit' onClick={this.changeCosts}>SUBMIT</button>\n                            </div>\n                        </div>\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default Puzzle;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/markyu/Desktop/work/fetch-robotics/path_planner/client/src/components/puzzle/puzzle.component.js\";\nimport React from 'react';\nimport './puzzle.styles.scss';\nimport Board from '../board/board.component';\nimport Popup from '../popup/popup.component';\nimport Adapter from '../../api/ApiAdapter';\n\nclass Puzzle extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async () => {\n      // console.log(e);\n      // this.setState({\n      //     settings: false,\n      //     mapWidth: config.mapWidth,\n      //     mapHeight: config.mapHeight,\n      //     start: config.start,\n      //     goal: config.goal,\n      //     costs: config.costs\n      // });\n      // this.setState({mapWidth: this.state.inputWidth});\n      // console.log('121321421412');\n      // console.log(this.state.inputWidth);\n      // this.setState({settings: false, mapWidth: this.state.inputWidth, mapHeight: this.state.inputHeight});\n      this.setState({\n        settings: false\n      });\n      const resCreateMap = await Adapter.createMap(this.state.inputHeight, this.state.inputWidth);\n      const resCreateStart = await Adapter.createStart(this.state.startI, this.state.startJ);\n      const resCreateGoal = await Adapter.createGoal(this.state.goalI, this.state.goalJ);\n      const resGetPath = await Adapter.getPath(); // console.log(resCreateMap);\n      // console.log(resCreateStart);\n      // console.log(resCreateGoal);\n      // console.log(resGetPath);\n\n      this.setState({\n        // settings: false,\n        mapWidth: resCreateMap.mapWidth,\n        mapHeight: resCreateMap.mapHeight,\n        startI: resCreateStart.i,\n        startJ: resCreateStart.j,\n        // start: resCreateStart,\n        // goal: resCreateGoal,\n        goalI: resCreateGoal.i,\n        goalJ: resCreateGoal.j,\n        paths: resGetPath.paths\n      }); // console.log(resCreateMap.mapWidth);\n      // console.log(this.state.mapWidth);\n      // console.log(this.state.goalI);\n    };\n\n    this.handleChange = e => {\n      // console.log(e.target);\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      }); // console.log(this.state.mapWidth);\n    };\n\n    this.state = {\n      settings: true,\n      mapWidth: 0,\n      mapHeight: 0,\n      inputWidth: 0,\n      inputHeight: 0,\n      // startI: 0,\n      // startJ: 0,\n      // goalI: 0,\n      // goalJ: 0,\n      costs: [],\n      paths: [],\n      start: {\n        i: 0,\n        j: 0\n      },\n      goal: {\n        i: 0,\n        j: 0\n      }\n    };\n  }\n\n  componentDidMount() {// this.setState({mapWidth: 8});\n  }\n\n  render() {\n    // console.log(this.state.settings);\n    // const width = this.state.mapWidth;\n    // const height = this.state.mapHeight;\n    const start = {\n      i: this.state.startI,\n      j: this.state.startJ\n    };\n    const goal = {\n      i: this.state.goalI,\n      j: this.state.goalJ\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, this.state.settings ? React.createElement(Popup, {\n      handleSubmit: this.handleSubmit,\n      handleChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Board, {\n      width: this.state.mapWidth,\n      height: this.state.mapHeight,\n      start: start,\n      goal: goal,\n      paths: this.state.paths,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"inputWidth\",\n      type: \"number\",\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"inputHeight\",\n      type: \"number\",\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }))) // <div className='Puzzle'>\n    //     <Board width={this.state.mapWidth} height={this.state.mapHeight}/>\n    //      <form onSubmit={this.handleSubmit}>\n    //          <input name='inputWidth' type='number' onChange={this.handleMapChange} required />\n    //          {/* <input name='inputHeight' type='number' onChange={this.handleMapChange} required /> */}\n    //     </form>\n    // </div>\n    ;\n  }\n\n}\n\nexport default Puzzle;","map":{"version":3,"sources":["/Users/markyu/Desktop/work/fetch-robotics/path_planner/client/src/components/puzzle/puzzle.component.js"],"names":["React","Board","Popup","Adapter","Puzzle","Component","constructor","props","handleSubmit","setState","settings","resCreateMap","createMap","state","inputHeight","inputWidth","resCreateStart","createStart","startI","startJ","resCreateGoal","createGoal","goalI","goalJ","resGetPath","getPath","mapWidth","mapHeight","i","j","paths","handleChange","e","name","value","target","costs","start","goal","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './puzzle.styles.scss';\n\nimport Board from '../board/board.component';\nimport Popup from '../popup/popup.component';\n\nimport Adapter from '../../api/ApiAdapter';\n\nclass Puzzle extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            settings: true,\n            mapWidth: 0,\n            mapHeight: 0,\n            inputWidth: 0,\n            inputHeight: 0,\n            // startI: 0,\n            // startJ: 0,\n            // goalI: 0,\n            // goalJ: 0,\n            costs: [],\n            paths: [],\n            start: {i: 0, j: 0},\n            goal: {i: 0, j: 0},\n        }\n    }\n\n    componentDidMount() {\n        // this.setState({mapWidth: 8});\n    }\n\n    handleSubmit = async () => {\n        // console.log(e);\n        // this.setState({\n        //     settings: false,\n        //     mapWidth: config.mapWidth,\n        //     mapHeight: config.mapHeight,\n        //     start: config.start,\n        //     goal: config.goal,\n        //     costs: config.costs\n        // });\n        // this.setState({mapWidth: this.state.inputWidth});\n        // console.log('121321421412');\n        // console.log(this.state.inputWidth);\n        // this.setState({settings: false, mapWidth: this.state.inputWidth, mapHeight: this.state.inputHeight});\n        this.setState({settings: false});\n        const resCreateMap = await Adapter.createMap(this.state.inputHeight, this.state.inputWidth);\n        const resCreateStart = await Adapter.createStart(this.state.startI, this.state.startJ);\n        const resCreateGoal = await Adapter.createGoal(this.state.goalI, this.state.goalJ);\n        const resGetPath = await Adapter.getPath();\n        // console.log(resCreateMap);\n        // console.log(resCreateStart);\n        // console.log(resCreateGoal);\n        // console.log(resGetPath);\n        this.setState({\n            // settings: false,\n            mapWidth: resCreateMap.mapWidth, \n            mapHeight: resCreateMap.mapHeight,\n            startI: resCreateStart.i,\n            startJ: resCreateStart.j,\n            // start: resCreateStart,\n            // goal: resCreateGoal,\n            goalI: resCreateGoal.i,\n            goalJ: resCreateGoal.j,\n            paths: resGetPath.paths\n        });\n        // console.log(resCreateMap.mapWidth);\n        // console.log(this.state.mapWidth);\n        // console.log(this.state.goalI);\n    }\n\n    handleChange = e => {\n        // console.log(e.target);\n        const {name, value} = e.target;\n        this.setState({[name]: value});\n        // console.log(this.state.mapWidth);\n    }\n\n    render() {\n        // console.log(this.state.settings);\n        // const width = this.state.mapWidth;\n        // const height = this.state.mapHeight;\n        const start = {i: this.state.startI, j: this.state.startJ};\n        const goal = {i: this.state.goalI, j: this.state.goalJ};\n        return(\n            <div>\n                {this.state.settings ?\n                    <Popup \n                        handleSubmit={this.handleSubmit} handleChange={this.handleChange} />\n                    :\n                    <div>\n                        <Board width={this.state.mapWidth} \n                            height={this.state.mapHeight} \n                            start={start} \n                            goal={goal}\n                            paths={this.state.paths}\n                        />\n                        <input name='inputWidth' type='number' onChange={this.handleChange} required />\n                        <input name='inputHeight' type='number' onChange={this.handleChange} required />\n                    </div>\n                }\n            </div>\n            // <div className='Puzzle'>\n            //     <Board width={this.state.mapWidth} height={this.state.mapHeight}/>\n            //      <form onSubmit={this.handleSubmit}>\n            //          <input name='inputWidth' type='number' onChange={this.handleMapChange} required />\n            //          {/* <input name='inputHeight' type='number' onChange={this.handleMapChange} required /> */}\n            //     </form>\n            // </div>\n        );\n    }\n}\n\nexport default Puzzle;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/markyu/Desktop/work/fetch-robotics/path_planner/client/src/components/board/board.component.js\";\nimport React from 'react';\nimport './board.styles.scss';\nimport Cell from '../cell/cell.component';\n\nconst Board = ({\n  width,\n  height\n}) => {\n  const boardArray = new Array(width * height);\n  boardArray.map((val, index) => {\n    return (index + 1) % width == 0 ? React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, React.createElement(Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    })) : React.createElement(Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    });\n  });\n};\n\nexport default Board;","map":{"version":3,"sources":["/Users/markyu/Desktop/work/fetch-robotics/path_planner/client/src/components/board/board.component.js"],"names":["React","Cell","Board","width","height","boardArray","Array","map","val","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,qBAAP;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAD,KAAqB;AAC/B,QAAMC,UAAU,GAAG,IAAIC,KAAJ,CAAUH,KAAK,GAACC,MAAhB,CAAnB;AACAC,EAAAA,UAAU,CAACE,GAAX,CAAe,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC3B,WAAQ,CAACA,KAAK,GAAC,CAAP,IAAYN,KAAZ,IAAqB,CAArB,GACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAN,EAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAd,CADQ,GAGR,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA;AAIH,GALD;AAMH,CARD;;AAUA,eAAeD,KAAf","sourcesContent":["import React from 'react';\nimport './board.styles.scss';\n\nimport Cell from '../cell/cell.component'\n\nconst Board = ({width, height}) => {\n    const boardArray = new Array(width*height);\n    boardArray.map((val, index) => {\n        return ((index+1) % width == 0 ? \n        <span><Cell /><br /></span>\n        :\n        <Cell />);\n    });\n};\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/markyu/Desktop/work/fetch-robotics/path_planner/client/src/components/puzzle/puzzle.component.js\";\nimport React from 'react';\nimport './puzzle.styles.scss';\nimport Board from '../board/board.component';\nimport Popup from '../popup/popup.component';\nimport Adapter from '../../api/ApiAdapter';\n\nclass Puzzle extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async () => {\n      // console.log(e);\n      // this.setState({\n      //     settings: false,\n      //     mapWidth: config.mapWidth,\n      //     mapHeight: config.mapHeight,\n      //     start: config.start,\n      //     goal: config.goal,\n      //     costs: config.costs\n      // });\n      // this.setState({mapWidth: this.state.inputWidth});\n      // console.log('121321421412');\n      // console.log(this.state.inputWidth);\n      // this.setState({settings: false, mapWidth: this.state.inputWidth, mapHeight: this.state.inputHeight});\n      this.setState({\n        settings: false\n      });\n      const resCreateMap = await Adapter.createMap(this.state.inputHeight, this.state.inputWidth);\n      this.setState({\n        mapWidth: resCreateMap.mapWidth,\n        mapHeight: resCreateMap.mapHeight\n      });\n    };\n\n    this.handleChange = e => {\n      console.log(e.target);\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      }); // console.log(this.state.mapWidth);\n    };\n\n    this.state = {\n      settings: true,\n      mapWidth: 0,\n      mapHeight: 8,\n      inputWidth: 0,\n      inputHeight: 0,\n      start: [0, 0],\n      goal: [4, 4],\n      costs: []\n    };\n  }\n\n  componentDidMount() {// this.setState({mapWidth: 8});\n  }\n\n  render() {\n    // const width = this.state.mapWidth;\n    // const height = this.state.mapHeight;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, this.state.settings ? React.createElement(Popup, {\n      handleSubmit: this.handleSubmit,\n      handleChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Board, {\n      width: this.state.mapWidth,\n      height: this.state.mapHeight,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"inputWidth\",\n      type: \"number\",\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"inputHeight\",\n      type: \"number\",\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }))) // <div className='Puzzle'>\n    //     <Board width={this.state.mapWidth} height={this.state.mapHeight}/>\n    //      <form onSubmit={this.handleSubmit}>\n    //          <input name='inputWidth' type='number' onChange={this.handleMapChange} required />\n    //          {/* <input name='inputHeight' type='number' onChange={this.handleMapChange} required /> */}\n    //     </form>\n    // </div>\n    ;\n  }\n\n}\n\nexport default Puzzle;","map":{"version":3,"sources":["/Users/markyu/Desktop/work/fetch-robotics/path_planner/client/src/components/puzzle/puzzle.component.js"],"names":["React","Board","Popup","Adapter","Puzzle","Component","constructor","props","handleSubmit","setState","settings","resCreateMap","createMap","state","inputHeight","inputWidth","mapWidth","mapHeight","handleChange","e","console","log","target","name","value","start","goal","costs","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sBAAP;AAEA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AAEA,OAAOC,OAAP,MAAoB,sBAApB;;AAEA,MAAMC,MAAN,SAAqBJ,KAAK,CAACK,SAA3B,CAAqC;AAEjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAkBnBC,YAlBmB,GAkBJ,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAKC,QAAL,CAAc;AAACC,QAAAA,QAAQ,EAAE;AAAX,OAAd;AACA,YAAMC,YAAY,GAAG,MAAMR,OAAO,CAACS,SAAR,CAAkB,KAAKC,KAAL,CAAWC,WAA7B,EAA0C,KAAKD,KAAL,CAAWE,UAArD,CAA3B;AACA,WAAKN,QAAL,CAAc;AAACO,QAAAA,QAAQ,EAAEL,YAAY,CAACK,QAAxB;AAAkCC,QAAAA,SAAS,EAAEN,YAAY,CAACM;AAA1D,OAAd;AACH,KAnCkB;;AAAA,SAqCnBC,YArCmB,GAqCJC,CAAC,IAAI;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAd;AACA,YAAM;AAACC,QAAAA,IAAD;AAAOC,QAAAA;AAAP,UAAgBL,CAAC,CAACG,MAAxB;AACA,WAAKb,QAAL,CAAc;AAAC,SAACc,IAAD,GAAQC;AAAT,OAAd,EAHgB,CAIhB;AACH,KA1CkB;;AAEf,SAAKX,KAAL,GAAa;AACTH,MAAAA,QAAQ,EAAE,IADD;AAETM,MAAAA,QAAQ,EAAE,CAFD;AAGTC,MAAAA,SAAS,EAAE,CAHF;AAITF,MAAAA,UAAU,EAAE,CAJH;AAKTD,MAAAA,WAAW,EAAE,CALJ;AAMTW,MAAAA,KAAK,EAAE,CAAC,CAAD,EAAI,CAAJ,CANE;AAOTC,MAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,CAPG;AAQTC,MAAAA,KAAK,EAAE;AARE,KAAb;AAUH;;AAEDC,EAAAA,iBAAiB,GAAG,CAChB;AACH;;AA4BDC,EAAAA,MAAM,GAAG;AACL;AACA;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKhB,KAAL,CAAWH,QAAX,GACG,oBAAC,KAAD;AAAO,MAAA,YAAY,EAAE,KAAKF,YAA1B;AAAwC,MAAA,YAAY,EAAE,KAAKU,YAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,GAGG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWG,QAAzB;AAAmC,MAAA,MAAM,EAAE,KAAKH,KAAL,CAAWI,SAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAO,MAAA,IAAI,EAAC,YAAZ;AAAyB,MAAA,IAAI,EAAC,QAA9B;AAAuC,MAAA,QAAQ,EAAE,KAAKC,YAAtD;AAAoE,MAAA,QAAQ,MAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAO,MAAA,IAAI,EAAC,aAAZ;AAA0B,MAAA,IAAI,EAAC,QAA/B;AAAwC,MAAA,QAAQ,EAAE,KAAKA,YAAvD;AAAqE,MAAA,QAAQ,MAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CAJR,CADJ,CAYI;AACA;AACA;AACA;AACA;AACA;AACA;AAlBJ;AAoBH;;AArEgC;;AAwErC,eAAed,MAAf","sourcesContent":["import React from 'react';\nimport './puzzle.styles.scss';\n\nimport Board from '../board/board.component';\nimport Popup from '../popup/popup.component';\n\nimport Adapter from '../../api/ApiAdapter';\n\nclass Puzzle extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            settings: true,\n            mapWidth: 0,\n            mapHeight: 8,\n            inputWidth: 0,\n            inputHeight: 0,\n            start: [0, 0],\n            goal: [4, 4],\n            costs: []\n        }\n    }\n\n    componentDidMount() {\n        // this.setState({mapWidth: 8});\n    }\n\n    handleSubmit = async () => {\n        // console.log(e);\n        // this.setState({\n        //     settings: false,\n        //     mapWidth: config.mapWidth,\n        //     mapHeight: config.mapHeight,\n        //     start: config.start,\n        //     goal: config.goal,\n        //     costs: config.costs\n        // });\n        // this.setState({mapWidth: this.state.inputWidth});\n        // console.log('121321421412');\n        // console.log(this.state.inputWidth);\n        // this.setState({settings: false, mapWidth: this.state.inputWidth, mapHeight: this.state.inputHeight});\n        this.setState({settings: false});\n        const resCreateMap = await Adapter.createMap(this.state.inputHeight, this.state.inputWidth);\n        this.setState({mapWidth: resCreateMap.mapWidth, mapHeight: resCreateMap.mapHeight});\n    }\n\n    handleChange = e => {\n        console.log(e.target);\n        const {name, value} = e.target;\n        this.setState({[name]: value});\n        // console.log(this.state.mapWidth);\n    }\n\n    render() {\n        // const width = this.state.mapWidth;\n        // const height = this.state.mapHeight;\n        return(\n            <div>\n                {this.state.settings ?\n                    <Popup handleSubmit={this.handleSubmit} handleChange={this.handleChange}/>\n                    :\n                    <div>\n                        <Board width={this.state.mapWidth} height={this.state.mapHeight} />\n                        <input name='inputWidth' type='number' onChange={this.handleChange} required />\n                        <input name='inputHeight' type='number' onChange={this.handleChange} required />\n                    </div>\n                }\n            </div>\n            // <div className='Puzzle'>\n            //     <Board width={this.state.mapWidth} height={this.state.mapHeight}/>\n            //      <form onSubmit={this.handleSubmit}>\n            //          <input name='inputWidth' type='number' onChange={this.handleMapChange} required />\n            //          {/* <input name='inputHeight' type='number' onChange={this.handleMapChange} required /> */}\n            //     </form>\n            // </div>\n        );\n    }\n}\n\nexport default Puzzle;"]},"metadata":{},"sourceType":"module"}